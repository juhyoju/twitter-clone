{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","style","marginTop","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBOttom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","OnClick","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ce67a7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  // Initialize Firebase\r\n  export default firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value}\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n        setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\" style={{ marginTop:15 }}>\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    required \r\n                    value={password} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthForm;","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : {name},\r\n        } = event;\r\n\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"3x\" style={{marginBOttom:30}} />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok) {\r\n            // delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"Edit your nweet\" \r\n                                value={newNweet} \r\n                                required\r\n                                autoFocus\r\n                                onChange={onChange}\r\n                                className=\"formInput\"\r\n                            />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span OnClick={toggleEditing} className=\"formBtn cancelBtn\">Cancle</span>                        \r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></span>\r\n                                <span onClick={toggleEditing}><FontAwesomeIcon icon={faPencilAlt} /></span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n    \r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\"); \r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}, \r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files }, \r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input \r\n                    value={nweet} \r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    placeholder=\"What's on your mind?\" \r\n                    maxLength={120}\r\n                    className=\"factoryInput__input\"\r\n                />\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{backgroundImage: attachment}}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div> \r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, [])\r\n    \r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop:30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n        \r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n  \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"prohileForm\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Display Name\" \r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"                    \r\n                    style= {{marginTop:10}}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display:\"flex\", justifyContent:\"center\", marginTop:50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight:10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\" style={{marginLeft:10, display:\"flex\", flexDirection:\"column\", alignItems:\"center\", fontSize:12}}>\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04aaff\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\n\r\n const AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n     \r\n     return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div className=\"containerRouter\">\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                    </Route>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <Router exact path=\"/\">\r\n                        <Auth />\r\n                    </Router>\r\n                </>\r\n            )}\r\n            </Switch>\r\n        </Router>\r\n     );\r\n};\r\n\r\nexport default AppRouter;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport Auth from \"routes/Auth\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n \r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        \r\n        setUserObj({\r\n          displayName:user.displayName,\r\n          uid:user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    }) \r\n  };\r\n  return (\r\n  <>\r\n    {init ? (\r\n      <AppRouter \r\n        refreshUser = {refreshUser}\r\n        isLoggedIn = {Boolean(userObj)}\r\n        userObj = {userObj} \r\n      /> \r\n    ) : (\r\n      \"Initializing...\"\r\n    )}\r\n    {/* <footer>&copy; {new Date().getFullYear()} TwitterClone</footer> */}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport fbase from \"./fbase\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}